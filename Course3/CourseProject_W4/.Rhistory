matrixOp$getMatrix()
matrixOp$getInverse()
cacheSolve(matrixOp)
source('C:/Users/Philipp/Downloads/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrixOp)
matrixOp$getInverse()
cacheSolve(matrixOp)
source('C:/Users/Philipp/Downloads/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrixOp)
m2 = matrix(c(1,2,2,3), nrow = 2, ncol = 2)
matrixOp$setMatrix( m2)
cacheSolve(matrixOp)
cacheSolve(matrixOp)
source('C:/Users/Philipp/Downloads/Coursera/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
e
x
summary(e)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x + e
summary(y)
plot(x,y)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
x <- rnorm(100)
set.seed(20)
x <- rnorm(100)
y <- 0.5 + 2*x + e
summary(y)
letters
sample(1:10)
set.seed(1)
rpois(5, 2)
clear
library(swirl)
rm(list=ls())
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants, n = 10)
tail(plants, n = 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, REPLACE = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips[flips = 1])
sum(flips[flips == 1])
sum(flips)
?rbinom
rbinom(1, 100, 0.7)
flips2 <- rbinom(100, 1, 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = 'Stopping Distance\')
c
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist,  ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = 'Stopping Distance')
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
?points
plot(cars, pch Â´2)
plot(cars, pch =2)
data(mtcars)
play()
src(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
play()
plot(data = mtcars, formula = mpg~cyl)
plot(mtcars)
plot(mtcars$mpg ~ mtcars$cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
nxt()
hist(mtcars$mpg)
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(x) x[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- read.csv("Git/Course2/progAssignment3/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
View(outcome)
debug(best)
best("TX", "heart failure")
outcomes
data
head(data)
min(data[,2])
data[10]
data[10,]
min_rows
which(data[,2] == 10)
min(1:5)
min(data[,2]
)
min(data[,2], na.rm = TRUE)
head(data
)
head(data[,2])
min(head(data[2]))
min(head(data[,2]))
min(as.numbers(head(data[,2])))
min(as.numeric(head(data[,2])))
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("MD", "heart attack")
best("MD", "pneumonia")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("MD", "pneumonia")
best("MD", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
]
debug(best)
best("BB", "heart attack")
states
(outcome %in% outcomes)
!(outcome %in% outcomes)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
best("BB", "heart attack")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
data("EuStockMarkets")
head(EuStockMarkets)
View(EuStockMarkets)
?EuStockMarkets
data("cars")
head(cars)
View(cars)
View(cars)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
data
rankhospital("TX", "heart failure", 4)
data
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
summary(data)
summary(data[,2])
str(data[,2])
data
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
data
View(data)
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
View(data)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
View(data)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
View(data)
num
data[1,4]
length(data)
nrows(data)
nrow(data)
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
num
num > nrow(data)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
rankhospital("MD", "heart attack", "worst")
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
rankall("heart attack", 20)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course2/progAssignment3/best.R')
r <- rankall("heart attack", 4)
r
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
url_string <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "Git/Course3/idaho_housing.csv")
download.file(url, "Git/Course3/idaho_housing.csv", method = "curl")
download.file(url_string, "Git/Course3/idaho_housing.csv", method = "curl")
download.file(url_string, "Git/Course3/idaho_housing.csv")
dt <- data.table(read.csv("Git/Course3/idaho_housing.csv"))
dt <- read.csv("Git/Course3/idaho_housing.csv")
View(dt)
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
which(agricultureLogical)
url_string <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
install.packages("jpeg")
library(jpeg)
filepath <- "Git/Course3/fjeff.jpg"
download.file(url_string, filepath, mode = "wb", method = "curl")
download.file(url_string, filepath, mode = "wb")
img <- readJPEG(filepath, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
fp1 <- "Git/Course3/fgdp.csv"
fp2 <- "Git/Course3/fedstats_country.csv"
download.file(url1, fp1)
download.file(url2, fp2)
dt1 <- read.csv(fp1)
dt2 <- read.csv(fp2)
data <- read.csv("ExData_Plotting1/household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
head(d)
head(data)
head(data[data$Date == '1/2/2007', ])
rm(list = ls())
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot1.R')
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
Sys.setenv(LANG = "en")
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3
plot3()
plot3()
datetime <- strptime(paste(data$Date, data$Time), format = "%d/%m/%Y %H:%M:%S")
head(datetime)
head(data$datetime)
class(data$datetime)
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3=
q
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
plot3()
x <- data$datetime
class(x)
y <- data$sub_metering_1
class(y)
data$sub_metering_1
data$Sub_metering_1
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
par(mfrow = c(1,1))
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Users/Philipp/Downloads/Coursera/ExData_Plotting1/plot4.R')
plot4()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
l <- xyplot(weight ~ Time | Diet, BodyWeight)
class(l)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2")
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
library(readr)
ds <- read_csv("Git/Course3/getdata%2Fdata%2Fss06hid.csv")
split <- strsplit(names(ds), "wgtp")
split[123]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "Git/Course3/fgdp.csv")
ds2 <- read.csv("Git/Course3/fgdp.csv")
head(ds)
head(ds2)
View(ds2)
ds2 <- read.csv("Git/Course3/fgdp.csv", skip = 4)
gdp <- as.numeric(gsub(",", "", ds2$X.4))
mean(gdp, na.rm = TRUE)
ds2 <- ds2[ds2$X != ""]
ds2 <- ds2[X != ""]
ds2 <- ds2[ds2$X != "",]
gdp <- as.numeric(gsub(",", "", ds2$X.4))
mean(gdp, na.rm = TRUE)
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
head(test)
head(test)
head(y_comb)
source('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
View(features)
grep(".*mean.* | .*std.*", features[,2])
grep(".*mean.* | .*std.*", features[,2])
grep(".*mean.*", features[,2])
grep(".*std.*", features[,2])
grep(".*mean.* | .*std.*", features[,2])
grep(".*mean.* | .*std.*", features[,2])
grep(".*mean.*" | ".*std.*", features[,2])
grep(".*mean.* | .*std.*", features[,2])
grep(".*mean.*|.*std.*", features[,2])
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
features_names
features_names
features_names
head(x_comb)
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
View(activities)
View(activities)
View(y_comb)
View(y_comb)
debugSource('C:/Users/Philipp/Downloads/Coursera/Git/Course3/CourseProject_W4/run_analysis.R')
View(comb_ds)
